<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddItemFailedMsg" xml:space="preserve">
    <value>添加失败，监控项目已存在！</value>
  </data>
  <data name="AddToMonitorItem" xml:space="preserve">
    <value>添加到监控项目</value>
  </data>
  <data name="Clock" xml:space="preserve">
    <value>时钟频率</value>
  </data>
  <data name="Conductivity" xml:space="preserve">
    <value>电导率</value>
  </data>
  <data name="Control" xml:space="preserve">
    <value>风扇控制器</value>
  </data>
  <data name="Current" xml:space="preserve">
    <value>电流</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>数据</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Delete" type="System.Resources.ResXNullRef, System.Windows.Forms">
    <value />
  </data>
  <data name="Energy" xml:space="preserve">
    <value>电量</value>
  </data>
  <data name="Factor" xml:space="preserve">
    <value>Factor</value>
  </data>
  <data name="Fan" xml:space="preserve">
    <value>风扇</value>
  </data>
  <data name="Flow" xml:space="preserve">
    <value>流量</value>
  </data>
  <data name="Frequency" xml:space="preserve">
    <value>频率</value>
  </data>
  <data name="HardwareInfo" xml:space="preserve">
    <value>硬件信息</value>
  </data>
  <data name="Humidity" xml:space="preserve">
    <value>湿度</value>
  </data>
  <data name="intel" type="System.Resources.ResXNullRef, System.Windows.Forms">
    <value />
  </data>
  <data name="Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>负载</value>
  </data>
  <data name="Noise" xml:space="preserve">
    <value>噪声</value>
  </data>
  <data name="PluginDescription" xml:space="preserve">
    <value>用于TrafficMonitor的硬件监控插件。</value>
  </data>
  <data name="PluginName" xml:space="preserve">
    <value>硬件监控插件</value>
  </data>
  <data name="Power" xml:space="preserve">
    <value>功率</value>
  </data>
  <data name="RemoveMonitorItemInquery" xml:space="preserve">
    <value>确实要删除选中项吗？</value>
  </data>
  <data name="Temperature" xml:space="preserve">
    <value>温度</value>
  </data>
  <data name="Throughput" xml:space="preserve">
    <value>速率</value>
  </data>
  <data name="TimeSpan" xml:space="preserve">
    <value>时间</value>
  </data>
  <data name="Voltage" xml:space="preserve">
    <value>电压</value>
  </data>
  <data name="Designed Capacity" xml:space="preserve">
    <value>设计容量</value>
  </data>
  <data name="Fully-Charged Capacity" xml:space="preserve">
    <value>充满电量</value>
  </data>
  <data name="Degradation Level" xml:space="preserve">
    <value>电池损耗</value>
  </data>
  <data name="Charge Level" xml:space="preserve">
    <value>电量</value>
  </data>
  <data name="Remaining Capacity" xml:space="preserve">
    <value>可用电量</value>
  </data>
  <data name="Charge/Discharge Current" xml:space="preserve">
    <value>充电/放电电流</value>
  </data>
  <data name="Charge/Discharge Rate" xml:space="preserve">
    <value>充电/放电功率</value>
  </data>
  <data name="Remaining Time (Estimated)" xml:space="preserve">
    <value>剩余时间（估计值）</value>
  </data>
  <data name="Battery Temperature" xml:space="preserve">
    <value>电池温度</value>
  </data>
  <data name="Bus Speed" xml:space="preserve">
    <value>总线频率</value>
  </data>
  <data name="GPU Memory Total" xml:space="preserve">
    <value>GPU 内存总量</value>
  </data>
  <data name="D3D Dedicated Memory Used" xml:space="preserve">
    <value>D3D 专用内存已使用</value>
  </data>
  <data name="D3D Dedicated Memory Free" xml:space="preserve">
    <value>D3D 专用内存可用</value>
  </data>
  <data name="D3D Dedicated Memory Total" xml:space="preserve">
    <value>D3D 专用内存总量</value>
  </data>
  <data name="D3D Shared Memory Used" xml:space="preserve">
    <value>D3D 共享内存已使用</value>
  </data>
  <data name="D3D Shared Memory Free" xml:space="preserve">
    <value>D3D 共享内存可用</value>
  </data>
  <data name="D3D Shared Memory Total" xml:space="preserve">
    <value>D3D 共享内存总量</value>
  </data>
  <data name="GPU Memory Used" xml:space="preserve">
    <value>GPU 内存已使用</value>
  </data>
  <data name="GPU Memory Free" xml:space="preserve">
    <value>GPU 内存可用</value>
  </data>
  <data name="GPU Memory" xml:space="preserve">
    <value>GPU 内存</value>
  </data>
  <data name="Memory Used" xml:space="preserve">
    <value>内存已使用</value>
  </data>
  <data name="Memory Available" xml:space="preserve">
    <value>内存可用</value>
  </data>
  <data name="Memory" xml:space="preserve">
    <value>内存</value>
  </data>
  <data name="Virtual Memory Used" xml:space="preserve">
    <value>虚拟内存已使用</value>
  </data>
  <data name="Virtual Memory Available" xml:space="preserve">
    <value>虚拟内存可用</value>
  </data>
  <data name="Virtual Memory" xml:space="preserve">
    <value>虚拟内存</value>
  </data>
  <data name="Data Uploaded" xml:space="preserve">
    <value>已上传数据</value>
  </data>
  <data name="Data Downloaded" xml:space="preserve">
    <value>已下载数据</value>
  </data>
  <data name="Upload Speed" xml:space="preserve">
    <value>上传速度</value>
  </data>
  <data name="Download Speed" xml:space="preserve">
    <value>下载速度</value>
  </data>
  <data name="Network Utilization" xml:space="preserve">
    <value>网络利用率</value>
  </data>
  <data name="Used Space" xml:space="preserve">
    <value>已使用空间</value>
  </data>
  <data name="Read Activity" xml:space="preserve">
    <value>读取活动</value>
  </data>
  <data name="Write Activity" xml:space="preserve">
    <value>写入活动</value>
  </data>
  <data name="Total Activity" xml:space="preserve">
    <value>总活动</value>
  </data>
  <data name="Read Rate" xml:space="preserve">
    <value>读取速率</value>
  </data>
  <data name="Write Rate" xml:space="preserve">
    <value>写入速率</value>
  </data>
  <data name="Available Spare" xml:space="preserve">
    <value>可用备用空间</value>
  </data>
  <data name="Available Spare Threshold" xml:space="preserve">
    <value>可用备用空间阈值</value>
  </data>
  <data name="Percentage Used" xml:space="preserve">
    <value>已使用百分比</value>
  </data>
  <data name="Data Read" xml:space="preserve">
    <value>已读取数据量</value>
  </data>
  <data name="Data Written" xml:space="preserve">
    <value>已写入数据量</value>
  </data>
  <data name="Generic Memory" xml:space="preserve">
    <value>通用内存</value>
  </data>
  <data name="GPU Core" xml:space="preserve">
    <value>GPU 核心</value>
  </data>
  <data name="Package" xml:space="preserve">
    <value>封装</value>
  </data>
  <data name="Charge Rate" xml:space="preserve">
    <value>充电功率</value>
  </data>
  <data name="Charge Current" xml:space="preserve">
    <value>充电电流</value>
  </data>
  <data name="Discharge Rate" xml:space="preserve">
    <value>放电功率</value>
  </data>
  <data name="Discharge Current" xml:space="preserve">
    <value>放电电流</value>
  </data>
</root>